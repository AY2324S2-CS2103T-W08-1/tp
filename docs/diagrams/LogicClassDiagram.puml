@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic as LogicPackage {

package "Parser Classes" as ParserClasses{
}
Class XYZCommand
Class CommandResult
Class "{abstract}\nCommand" as Command
Class "{abstract}\nConfirmableCommand" as ConfirmableCommand
Class "{abstract}\nAbstractDeleteCommand" as ADCommand
Class XYZDeleteCommand
Enum "<<enumeration>>\nCommandBoxState" as CommandBoxState

Class "<<interface>>\nLogic" as Logic
Class LogicManager
}

package Model {
Class HiddenModel #FFFFFF
}

package Storage {
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .right.|> Logic
LogicManager -left->"2" ParserClasses
ParserClasses ..> XYZCommand : <<create>>
ParserClasses ..>XYZDeleteCommand : <<create>>

XYZCommand -up-|> Command
LogicManager .left.> Command : <<call>>

LogicManager --> Model
LogicManager --> Storage
CommandBoxState -right[hidden]->CommandResult
LogicManager -> CommandBoxState
Storage --[hidden] Model
Command .[hidden]up.> Storage
Command .right.> Model
note right of XYZCommand: XYZCommand = AddCommand, \nFindCommand, etc
ConfirmableCommand -right|> Command
ConfirmableCommand ..> Command: <<create>>
ConfirmableCommand ..> Command: <<create>>
ADCommand -down|> ConfirmableCommand
XYZDeleteCommand -up-|>ADCommand
note left of XYZDeleteCommand: XYZDeleteCommand = DeleteTagCommand, \nClearCommand, etc
Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult : <<create>>
@enduml
