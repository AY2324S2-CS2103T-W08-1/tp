@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":SearchCommandParser" as SearchCommandParser LOGIC_COLOR
participant ":SearchPersonDescriptor" as SearchPersonDescriptor LOGIC_COLOR
participant "s:SearchCommand" as SearchCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "p:SearchPredicate" as SearchPredicate MODEL_COLOR
participant "m:Model" as Model MODEL_COLOR
participant ":ContainsKeywordsPredicate" as ContainsKeywordsPredicate MODEL_COLOR
end box

[-> LogicManager : execute("search n/l c/SG")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("search n/l c/SG")
activate AddressBookParser

create SearchCommandParser
AddressBookParser -> SearchCommandParser
activate SearchCommandParser

SearchCommandParser --> AddressBookParser
deactivate SearchCommandParser

AddressBookParser -> SearchCommandParser : parse("n/l c/SG")
activate SearchCommandParser

create SearchPersonDescriptor
SearchCommandParser --> SearchPersonDescriptor
activate SearchPersonDescriptor

SearchPersonDescriptor -> SearchCommandParser
deactivate SearchPersonDescriptor

create SearchCommand
SearchCommandParser -> SearchCommand


SearchCommand --> SearchCommandParser
deactivate SearchCommand

SearchCommandParser --> AddressBookParser : s
deactivate SearchCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
SearchCommandParser -[hidden]-> AddressBookParser
destroy SearchCommandParser

AddressBookParser --> LogicManager : s
deactivate AddressBookParser

LogicManager -> SearchCommand : execute(m)
activate SearchCommand

SearchCommand --> SearchPersonDescriptor : getPredicate()
activate SearchPersonDescriptor

loop 6 times

create ContainsKeywordsPredicate
SearchPersonDescriptor --> ContainsKeywordsPredicate
activate ContainsKeywordsPredicate

ContainsKeywordsPredicate --> SearchPersonDescriptor
deactivate ContainsKeywordsPredicate

end

create SearchPredicate
SearchPersonDescriptor --> SearchPredicate

SearchPredicate --> SearchPersonDescriptor
deactivate SearchPredicate

SearchPersonDescriptor --> SearchCommand : p
deactivate SearchPersonDescriptor

SearchCommand -> Model : updateFilteredPersonList(p)
activate Model

Model --> SearchPredicate : test(person)
activate SearchPredicate

loop 6 times

SearchPredicate --> ContainsKeywordsPredicate

activate ContainsKeywordsPredicate
ContainsKeywordsPredicate --> ContainsKeywordsPredicate : test(person)

ContainsKeywordsPredicate --> SearchPredicate
deactivate ContainsKeywordsPredicate

end

ContainsKeywordsPredicate --> SearchPredicate

SearchPredicate --> Model
deactivate SearchPredicate

Model --> SearchCommand
deactivate Model

create CommandResult
SearchCommand -> CommandResult
activate CommandResult

CommandResult --> SearchCommand
deactivate CommandResult

SearchCommand --> LogicManager : r
deactivate SearchCommand

[<--LogicManager
deactivate LogicManager
@enduml
